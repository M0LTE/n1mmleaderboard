@page
@model IndexModel
@{
    ViewData["Title"] = "Leaderboard";
}

<div class="row">
    <div class="col-md-12">
        <span id="lastUpdate" style="color:yellow; font-size:20pt; font-weight:bold;"></span>
        <table id="leaderboard" class="table embiggen">
            <thead>
                <tr>
                    <th scope="col" style="font-size:50%;">Op</th>
                    <th scope="col" id="measureTitle" style="font-size:50%;"></th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
        <a href="javascript:;" id="points">Points</a> |
        <a href="javascript:;" id="byTotalQso">By total QSOs</a> |
        <a href="javascript:;" id="byMult1">By mult 1</a> |
        <a href="javascript:;" id="rateShort">Live QSO rate (short)</a> |
        <a href="javascript:;" id="rateLong">Live QSO rate (long)</a> |
        <a href="javascript:;" id="ratePeak">Peak 5 min QSO count</a> |
        <a href="javascript:;" id="sinceLastQso">Time since last QSO</a> |
        <a href="javascript:;" id="bandstats">Band stats</a> |
        <a href="javascript:;" id="radiostats">Radio stats</a>
    </div>
</div>

<script type="text/javascript">
    var pointsTitle = "Points";
    var totalqsosTitle = "QSOs";
    var mult1Title = "Mults";
    var qsoRateShortTitle = "Last 15 min QSO rate";
    var qsoRateLongTitle = "Last hour QSO rate";
    var qsoRatePeakTitle = "Peak 5 min QSO count";
    var sinceLastQsoTitle = "Since last QSO";
    var bandstatsTitle = "Contacts";
    var radiostatsTitle = "Band @@ timestamp";

    var measure;
    var lastUpdate;
    var intervalID;
    var requestingNow = false;
    var suffix = "";

    function switchToPoints() {
        measure = "Points";
        suffix = "";
        removeRows();
        setTitle(pointsTitle);
        refreshTable();
    }

    function switchToTotalQsos() {
        measure = "TotalQsos";
        suffix = "";
        removeRows();
        setTitle(totalqsosTitle);
        refreshTable();
    }

    function switchToMult1 () {
        measure = "TotalIsMult1Contacts";
        suffix = "";
        removeRows();
        setTitle(mult1Title);
        refreshTable();
    }

    function switchToRateShort () {
        measure = "qsorate/15";
        suffix = "/hr";
        removeRows();
        setTitle(qsoRateShortTitle);
        refreshTable();
    }

    function switchToRateLong () {
        measure = "qsorate/60";
        suffix = "/hr";
        setTitle(qsoRateLongTitle);
        refreshTable();
    }

    function switchToRatePeak () {
        measure = "qsopeak";
        suffix = "";
        setTitle(qsoRatePeakTitle);
        removeRows();
        refreshTable();
    }

    function switchToSinceLastQso() {
        measure = "sincelastqso";
        suffix = "";
        setTitle(sinceLastQsoTitle);
        removeRows();
        refreshTable();
    }

    function switchToBandStats() {
        measure = "bandstats";
        suffix = "";
        setTitle(bandstatsTitle);
        removeRows();
        refreshTable();
    }

    function switchToRadioStats() {
        measure = "radiostats";
        suffix = "";
        setTitle(radiostatsTitle);
        removeRows();
        refreshTable();
    }

    function removeRows() {
        var node = $("#leaderboard > tbody");
        node.find("tr").remove();
    }

    function setTitle(title) {
        $('#measureTitle').html(title);
    }

    function refreshTable() {
        if (lastUpdate) {
            var msSince = Date.now() - lastUpdate;
            if (measure != "qsopeak" && msSince > 10000) {
                var warn = "No update for " + msSince + "ms";
                console.log(warn);
                $("#lastUpdate").html(warn);
            } else {
                $("#lastUpdate").html("");
            }
        }

        if (!requestingNow) {
            requestingNow = true;
            $.getJSON("api/leaderboard/" + measure, function (data) {
                removeRows();

                var styl = "";
                if (measure == "radiostats") {
                    styl = " style=\"font-size:0.65em; font-weight:normal;\"";
                }

                jQuery.each(data, function (i, val) {
                    var node = $("#leaderboard > tbody");

                    var h = "<tr><td" + styl + ">"
                        + val.operator + "</td><td" + styl
                        + ">" + val.count + " " + suffix + "</td></tr>";

                    node.append(h);
                });
                lastUpdate = Date.now();
            }).always(function () {
                requestingNow = false;
            });
        }
    }

    var viewMethods = [switchToPoints, switchToTotalQsos, switchToMult1, switchToRateShort, switchToRateLong, switchToRatePeak, switchToSinceLastQso, switchToBandStats, switchToRadioStats ];

    var viewNum = 0;

    function switchView(){
        if (viewNum == viewMethods.length - 1) {
            viewNum = 0;
        } else {
            viewNum++;
        }

        viewMethods[viewNum]();
    }

    $(document).ready(function () {

        // initial view
        measure = "TotalQsos";
        $('#measureTitle').html(totalqsosTitle);

        intervalID = setInterval(refreshTable, 1000);

        refreshTable();

        $('#points').on('click', switchToPoints);

        $('#byTotalQso').on('click', switchToTotalQsos);

        $('#byMult1').on('click', switchToMult1);

        $('#rateShort').on('click', switchToRateShort);

        $('#rateLong').on('click', switchToRateLong);

        $('#ratePeak').on('click', switchToRatePeak);

        $('#sinceLastQso').on('click', switchToSinceLastQso);

        $('#bandstats').on('click', switchToBandStats);

        $('#radiostats').on('click', switchToRadioStats);

        setInterval(switchView, 60000);

        /*number of qsos per op
            number of qsos per band per op
            number of ismultiplier1 per op

            gridsquares per op
            states per op*/
    });
</script>